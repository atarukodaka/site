---
title: middleman のレイアウト
series: middleman と org-mode でサイト構築
layout: series
date: 2014/11/01
tag: middleman, org-mode
---

** レイアウト
デフォルトのレイアウトがしょぼいので、bootstrap などを使ってそれっぽく変えます。

#+BEGIN_SRC html
% vi layouts/layout.erb
... 
<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <!-- jquery -->
    <%= javascript_include_tag "jquery-1.11.0.min.js" %>
    <!-- bootstrap -->
    <%= javascript_include_tag "bootstrap.min.js" %>
    <%= stylesheet_link_tag "bootstrap.min.css" %>
    <!-- site specific styles -->
    <%= stylesheet_link_tag "style.css" %>
    <%= stylesheet_link_tag "pygment_trac.css" %>

    <title>Site Title</title>
  </head>
  <body>
    <div class="navbar navbar-default">
      <ul class="nav navbar-nav">
        <li><%= link_to("top", "/") %></li>
      </ul>
    </div>
    <div class="container">
      <div class="raw">
        <div class="col-md-3 hidden-xs hidden-sm">
	  <%= partial "partials/sidebar" %>
	</div>
	<div class="col-md-9">
	  <%= yield %>
	</div>
      </div>
    </div>
    <div class="footer">
      powered by middleman and twitter-bootstrap
    </div>
  </body>
</html>
#+END_SRC

標準的な、bootstrap を使ったヘッダー、フッターつきの左にサイドメニュー、右に中身ペイン方式です。

- javascript_include_tag "hoge.js" で /javascripts/hoge.js を、
- stylesheet_link_tag "hoge.css" で /stylesheets/hoge.css を

参照してくれます。
jquery, bootstrap などは適宜 source 以下の当該ディレクトリに入れておいてください。

中身は <%= yield %> で取れます。

*** エスケープ
<> などがそのまま表示されてしまうと困るので、ERB::Util::h を使ってエスケープさせます。

#+BEGIN_SRC ruby
% vi config.rb
...
helpers do
  def h(args)
    ERB::Util::h(args)
  end
end
#+END_SRC

と h() というヘルパーを作ってあげます。

*** サイドメニュー
partial を使います。

source/partials/_sidemenu.erb が参照されますが、
長くなるので別項にします。

とりあえず作るだけ作っておきます。

#+BEGIN_SRC 
% vi source/partials/_sidemenu.erb
<div>
  sidemenu will be put here.
</div>
#+END_SRC

** page レイアウト
記事用の子レイアウトを作ります。

#+BEGIN_SRC html
%vi source/layouts/page.erb
<% wrap_layout :layout do %>
  <h1 class="page-header">
    <%= h current_page.data.title %>
  </h1>
  <div class="cntent">
    <%= yield %>
  </div>
<% end %>
#+END_SRC

wrap_layout :layout を使うと、layout の子レイアウトに出来ます。
layout の yield 部にこれが展開されるのですね。

記事ソースファイルで layout: page と指定します。
個々に設定するのが面倒なら、config.rb で set :layout, :page とすると省略できます。

** index.html の作成
標準でついてくる index.html.erb はいらないので消します。
最終的には org-mode 書式を使いたいのですが、
取り敢えず markdown で試してみます。

#+BEGIN_SRC 
% rm source/index.html.erb
% vi source/index.html.md
## test
- a
- b
- c
% mm build
#+END_SRC
