---
title: github への deploy
series: middleman と org-mode でサイト構築
tag: middleman, org-mode
---


** github の gh-pages へのデプロイ
*** middleman-deploy を使う
[[http://d.hatena.ne.jp/osyo-manga/20140209/1391955805][middleman で構築したサイトを GitHub Pages で公開するまでの流れをまとめてみた - C++でゲームプログラミング]]
にあるとおりに。

似たようなものに middleman-gh-pages がありますが、ここでは -deploy を使います。

#+BEGIN_SRC 
vi Gemfile
...
gem 'middleman-deploy'

vi config.rb
# deploy to github proj-page
activate :deploy do |deploy|
  # deploy.build_before = true
  deploy.method = :git
  deploy.branch = 'gh-pages'
end
configure :build do
  activate :asset_host, :host => "/project"    # プロジェクト名を指定
end

set :relative_links, true
#+END_SRC

gh-pages の場合は root url がプロジェクト名以下 (http://username.github.io/project など)
となるため、リンクを張る場合は注意と設定が必要です。
具体的には、上記のとおり 

- activate :asset_host, :host => "/project"： javascript_include_tag, stylesheet_link_tag などで参照urlの頭に :host で指定したのをつけてくれる
- set: relative_links, true： link_to() で相対urlに変換してくれる


#+BEGIN_SRC 
% mm deploy
#+END_SRC

*** 手動でやってみる
メカニズムを理解するために、マニュアルでやってみます。
参考：[[https://help.github.com/articles/creating-project-pages-manually/][Creating Project Pages manually - User Documentation]]

#+BEGIN_SRC 
mm build; cd build
git init
git remote add origin git@github.com:atarukodaka/site.git
git checkout --orphan gh-pages
(1.7.2以前のバージョンで --orphan が無い時は、git symbolic-ref HEAD refs/heads/gh-pages)
git add . ; git commit -m "init"
git push origin gh-pages
#+END_SRC

あとは、更新するときに

#+BEGIN_SRC 
mm build; cd build
git commt -m "msg" -a
git push origin gh-pages
#+END_SRC




set :relative_links, true
#+END_SRC

** heroku へのデプロイ
そもそも html をアップするだけなので heroku である必要はないのですが、念のため。

*** Procfile の作成
ほぼ通常どおりですが、Procfile を以下のように作っておきます。

#+BEGIN_SRC 
% vi Procfile
web: bundle exec middleman build && middleman server -p $PORT
#+END_SRC

*** デプロイ
あとはいつもどおりですね。

#+BEGIN_SRC 
% heroku create APPNAME
% git init; git add . git commit -m init -a
% git push heroku master
#+END_SRC


